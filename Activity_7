{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/AbhinavReddyK/Activity6_Dataset/blob/main/Activity_7\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **SCIENTIFIC DATA VISUALIZATION**\n",
        "\n",
        "---\n",
        "\n"
      ],
      "metadata": {
        "id": "KoyY0c1B1PMX"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Guidelines:-\n",
        "1. Use Google Colab to complete this Activity.\n",
        "2. Upload your dataset in Gist and copy the link.\n",
        "3. For Questions, You will need to fill the \"?\" with appropriate attribute or keyword.\n",
        "4. You just have to run the code for tutorial as it is and answer the questions accordingly.\n",
        "5. In tutorial, you will need to load a dataset of your own and implement the code provided in the tutorial and make necessary changes to the code based on the Data.\n",
        "6. Submit both IPYNB along with a PDF generated file of this IPYNB file.\n",
        "7. Write Theoritical answers by just taking a new text cell below the question asked.\n",
        "8. The Variable names must have last 2 digits of your student ID number.\n",
        "9. You dont have to submit the Tutorial File.\n",
        "10. You must Use your own dataset for the tutorials and perform the same as given in the Tutorial."
      ],
      "metadata": {
        "id": "27iM4vKr4UZ3"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Question 1 ( 25 Points)**"
      ],
      "metadata": {
        "id": "CZfAD0ME0zLo"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd  # Import pandas\n",
        "\n",
        "# Create the car dataset as a dictionary\n",
        "data = {\n",
        "    \"Model\": [\"Toyota Corolla\", \"Ford Focus\", \"Honda Civic\", \"BMW 3 Series\", \"Audi A4\",\n",
        "              \"Tesla Model 3\", \"Mercedes-Benz C-Class\", \"Volkswagen Jetta\", \"Chevrolet Malibu\", \"Hyundai Sonata\"],\n",
        "    \"Price (in USD)\": [20000, 19000, 22000, 35000, 37000, 45000, 40000, 23000, 24000, 27000],\n",
        "    \"Horsepower\": [132, 140, 158, 255, 248, 283, 255, 147, 160, 191],\n",
        "    \"Weight (in kg)\": [1100, 1200, 1250, 1500, 1450, 1600, 1500, 1300, 1400, 1400],\n",
        "    \"Year\": [2019, 2020, 2021, 2020, 2021, 2021, 2020, 2019, 2020, 2021]\n",
        "}\n",
        "\n",
        "# Create a DataFrame\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Display the last few rows of the dataframe\n",
        "print(df.tail())  # 'tail()' shows the last 5 rows by default\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BNEjArCM9aMj",
        "outputId": "c47521e9-55b3-40b2-f722-683ca4e1fda5"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   Model  Price (in USD)  Horsepower  Weight (in kg)  Year\n",
            "5          Tesla Model 3           45000         283            1600  2021\n",
            "6  Mercedes-Benz C-Class           40000         255            1500  2020\n",
            "7       Volkswagen Jetta           23000         147            1300  2019\n",
            "8       Chevrolet Malibu           24000         160            1400  2020\n",
            "9         Hyundai Sonata           27000         191            1400  2021\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Basic statistics of the dataset\n",
        "print(df.describe())\n",
        "\n",
        "# Check for any missing values\n",
        "print(df.isnull().sum())\n"
      ],
      "metadata": {
        "id": "ARZ2dISwla34",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "090f9780-1815-4a9b-897c-5773c6c8608f"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "       Price (in USD)  Horsepower  Weight (in kg)         Year\n",
            "count        10.00000   10.000000       10.000000    10.000000\n",
            "mean      29200.00000  196.900000     1370.000000  2020.200000\n",
            "std        9259.22963   57.372951      154.919334     0.788811\n",
            "min       19000.00000  132.000000     1100.000000  2019.000000\n",
            "25%       22250.00000  149.750000     1262.500000  2020.000000\n",
            "50%       25500.00000  175.500000     1400.000000  2020.000000\n",
            "75%       36500.00000  253.250000     1487.500000  2021.000000\n",
            "max       45000.00000  283.000000     1600.000000  2021.000000\n",
            "Model             0\n",
            "Price (in USD)    0\n",
            "Horsepower        0\n",
            "Weight (in kg)    0\n",
            "Year              0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Set the aesthetic style of the plots\n",
        "sns.set_style(\"whitegrid\")\n",
        "\n",
        "# Plot the frequency distribution of 'Price (in USD)'\n",
        "sns.histplot(df[\"Price (in USD)\"], kde=True, bins=10)  # Plotting the histogram with KDE for 'Price'\n",
        "plt.title('Frequency Distribution of Car Prices (in USD)')  # Adding a title\n",
        "plt.xlabel('Price (in USD)')  # Label for the x-axis\n",
        "plt.ylabel('Frequency')  # Label for the y-axis\n",
        "plt.show()  # Show the plot\n"
      ],
      "metadata": {
        "id": "gFt2JayplTYU",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 472
        },
        "outputId": "9c3e69ea-565b-4de1-e4ee-c1d75e6adfcf"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the Pairplot with 'Year' as the hue\n",
        "sns.pairplot(df, hue='Year', height=2.5)  # Adjust 'Year' or use another column as hue\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "aLHeyzZWmmuB",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 758
        },
        "outputId": "acb9a443-59cc-43dc-bf44-441c0fc60845"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 835.25x750 with 12 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Select only numeric columns for the correlation matrix\n",
        "df_numeric = df.select_dtypes(include=['float64', 'int64'])  # Calculate the correlation matrix\n",
        "\n",
        "# Display the Correlation matrix heatmap\n",
        "plt.figure(figsize=(8, 6))  # Set the size of the plot\n",
        "sns.heatmap(df_numeric.corr(), annot=True, fmt=\".2f\", cmap='Blues')  # Display correlation matrix with annotations\n",
        "plt.title('Correlation Matrix Heatmap')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "Sg1VDQeyn5YO",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "outputId": "db2d2790-4896-4bd6-cd52-5b10af257c84"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import altair as alt\n",
        "\n",
        "# Scatter plot for 'Price (in USD)' vs 'Horsepower'\n",
        "scatterplot = alt.Chart(df).mark_point().encode(\n",
        "    x='Price (in USD)',  # 'Price (in USD)' on the X-axis\n",
        "    y='Horsepower',  # 'Horsepower' on the Y-axis\n",
        "    color='Year',  # Add color based on 'Year'\n",
        "    tooltip=['Model', 'Price (in USD)', 'Horsepower']  # Add tooltips for better interaction\n",
        ").interactive()\n",
        "\n",
        "# Bar chart for total 'Price (in USD)' by 'Year'\n",
        "bar_chart = alt.Chart(df).mark_bar().encode(\n",
        "    x='Year',  # 'Year' on the X-axis\n",
        "    y='Price (in USD):Q',  # Sum of 'Price (in USD)' on the Y-axis\n",
        "    color='Year',  # Color based on 'Year'\n",
        "    tooltip=['Year', 'Price (in USD)']  # Tooltips for the bar chart\n",
        ").interactive()\n",
        "\n",
        "# Combine the scatter plot and bar chart with a single interactive legend\n",
        "combined_plot = alt.hconcat(\n",
        "    scatterplot,\n",
        "    bar_chart\n",
        ").resolve_scale(\n",
        "    color='independent'  # Ensures the color scales are independent, but the legend is shared\n",
        ")\n",
        "\n",
        "combined_plot.show()\n"
      ],
      "metadata": {
        "id": "fRUmNjBPoHs1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 370
        },
        "outputId": "2049841d-6238-497b-af3a-f7fb2f2fed0e"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "<style>\n",
              "  #altair-viz-f406e6dceefd4d8ea5dfeb7a77add5d0.vega-embed {\n",
              "    width: 100%;\n",
              "    display: flex;\n",
              "  }\n",
              "\n",
              "  #altair-viz-f406e6dceefd4d8ea5dfeb7a77add5d0.vega-embed details,\n",
              "  #altair-viz-f406e6dceefd4d8ea5dfeb7a77add5d0.vega-embed details summary {\n",
              "    position: relative;\n",
              "  }\n",
              "</style>\n",
              "<div id=\"altair-viz-f406e6dceefd4d8ea5dfeb7a77add5d0\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-f406e6dceefd4d8ea5dfeb7a77add5d0\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-f406e6dceefd4d8ea5dfeb7a77add5d0\");\n",
              "    }\n",
              "\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.20.1?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      let deps = [\"vega-embed\"];\n",
              "      require(deps, displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"5.20.1\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"hconcat\": [{\"mark\": {\"type\": \"point\"}, \"encoding\": {\"color\": {\"field\": \"Year\", \"type\": \"quantitative\"}, \"tooltip\": [{\"field\": \"Model\", \"type\": \"nominal\"}, {\"field\": \"Price (in USD)\", \"type\": \"quantitative\"}, {\"field\": \"Horsepower\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"Price (in USD)\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"}}, \"name\": \"view_1\"}, {\"mark\": {\"type\": \"bar\"}, \"encoding\": {\"color\": {\"field\": \"Year\", \"type\": \"quantitative\"}, \"tooltip\": [{\"field\": \"Year\", \"type\": \"quantitative\"}, {\"field\": \"Price (in USD)\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"Year\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"Price (in USD)\", \"type\": \"quantitative\"}}, \"name\": \"view_2\"}], \"data\": {\"name\": \"data-6145f401147b770a254b4fedbb1675b3\"}, \"params\": [{\"name\": \"param_1\", \"select\": {\"type\": \"interval\", \"encodings\": [\"x\", \"y\"]}, \"bind\": \"scales\", \"views\": [\"view_1\"]}, {\"name\": \"param_2\", \"select\": {\"type\": \"interval\", \"encodings\": [\"x\", \"y\"]}, \"bind\": \"scales\", \"views\": [\"view_2\"]}], \"resolve\": {\"scale\": {\"color\": \"independent\"}}, \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.20.1.json\", \"datasets\": {\"data-6145f401147b770a254b4fedbb1675b3\": [{\"Model\": \"Toyota Corolla\", \"Price (in USD)\": 20000, \"Horsepower\": 132, \"Weight (in kg)\": 1100, \"Year\": 2019}, {\"Model\": \"Ford Focus\", \"Price (in USD)\": 19000, \"Horsepower\": 140, \"Weight (in kg)\": 1200, \"Year\": 2020}, {\"Model\": \"Honda Civic\", \"Price (in USD)\": 22000, \"Horsepower\": 158, \"Weight (in kg)\": 1250, \"Year\": 2021}, {\"Model\": \"BMW 3 Series\", \"Price (in USD)\": 35000, \"Horsepower\": 255, \"Weight (in kg)\": 1500, \"Year\": 2020}, {\"Model\": \"Audi A4\", \"Price (in USD)\": 37000, \"Horsepower\": 248, \"Weight (in kg)\": 1450, \"Year\": 2021}, {\"Model\": \"Tesla Model 3\", \"Price (in USD)\": 45000, \"Horsepower\": 283, \"Weight (in kg)\": 1600, \"Year\": 2021}, {\"Model\": \"Mercedes-Benz C-Class\", \"Price (in USD)\": 40000, \"Horsepower\": 255, \"Weight (in kg)\": 1500, \"Year\": 2020}, {\"Model\": \"Volkswagen Jetta\", \"Price (in USD)\": 23000, \"Horsepower\": 147, \"Weight (in kg)\": 1300, \"Year\": 2019}, {\"Model\": \"Chevrolet Malibu\", \"Price (in USD)\": 24000, \"Horsepower\": 160, \"Weight (in kg)\": 1400, \"Year\": 2020}, {\"Model\": \"Hyundai Sonata\", \"Price (in USD)\": 27000, \"Horsepower\": 191, \"Weight (in kg)\": 1400, \"Year\": 2021}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.HConcatChart(...)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Which library/ package are you going to use for interactive\n",
        "visualization in this lab? Simply describe them"
      ],
      "metadata": {
        "id": "GEW_clK84kJ4"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1) Altair: A Python declarative plotting statistical library that simplifies interactive plots creation. It simplifies plotting of charts like scatter plots, bar charts, line charts, etc. along with the ability to add interactivity like filtering and tooltips.\n",
        "\n",
        "2) Seaborn: Although Seaborn is statically biased, we are able to use its Matplotlib support to have interactivity (zoom, hover) on graphs. But it's a less advanced interactivity compared to Altair.\n",
        "\n",
        "3) Pandas: Pandas is a robust, extremely malleable, open-source data manipulation and analysis library in Python. It provides data structures like DataFrame (for 2D data) and Series (for 1D data) through which it is easy to manipulate, analyze, and handle large volumes of data.\n"
      ],
      "metadata": {
        "id": "EQfKWyQc97KL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Create multiple plots which contains one interactive legend. Describe multiple plots and Analyze the data based on the plots."
      ],
      "metadata": {
        "id": "svGXuh7Q46S2"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import altair as alt\n",
        "import pandas as pd\n",
        "\n",
        "# Create the car dataset as a dictionary\n",
        "data = {\n",
        "    \"Model\": [\"Toyota Corolla\", \"Ford Focus\", \"Honda Civic\", \"BMW 3 Series\", \"Audi A4\",\n",
        "              \"Tesla Model 3\", \"Mercedes-Benz C-Class\", \"Volkswagen Jetta\", \"Chevrolet Malibu\", \"Hyundai Sonata\"],\n",
        "    \"Price (in USD)\": [20000, 19000, 22000, 35000, 37000, 45000, 40000, 23000, 24000, 27000],\n",
        "    \"Horsepower\": [132, 140, 158, 255, 248, 283, 255, 147, 160, 191],\n",
        "    \"Weight (in kg)\": [1100, 1200, 1250, 1500, 1450, 1600, 1500, 1300, 1400, 1400],\n",
        "    \"Year\": [2019, 2020, 2021, 2020, 2021, 2021, 2020, 2019, 2020, 2021]\n",
        "}\n",
        "\n",
        "# Create a DataFrame\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Scatter plot for 'Price (in USD)' vs 'Horsepower'\n",
        "scatterplot = alt.Chart(df).mark_point().encode(\n",
        "    x='Price (in USD)',  # 'Price (in USD)' on the X-axis\n",
        "    y='Horsepower',  # 'Horsepower' on the Y-axis\n",
        "    color='Year',  # Add color based on 'Year'\n",
        "    tooltip=['Model', 'Price (in USD)', 'Horsepower']  # Add tooltips for better interaction\n",
        ").interactive()\n",
        "\n",
        "# Bar chart for total 'Price (in USD)' by 'Year'\n",
        "bar_chart = alt.Chart(df).mark_bar().encode(\n",
        "    x='Year',  # 'Year' on the X-axis\n",
        "    y='Price (in USD):Q',  # Sum of 'Price (in USD)' on the Y-axis\n",
        "    color='Year',  # Color based on 'Year'\n",
        "    tooltip=['Year', 'Price (in USD)']  # Tooltips for the bar chart\n",
        ").interactive()\n",
        "\n",
        "# Combine the scatter plot and bar chart with a single interactive legend\n",
        "combined_plot = alt.hconcat(\n",
        "    scatterplot,\n",
        "    bar_chart\n",
        ").resolve_scale(\n",
        "    color='independent'  # Ensures the color scales are independent, but the legend is shared\n",
        ")\n",
        "\n",
        "combined_plot.show()\n"
      ],
      "metadata": {
        "id": "Z8hrADZu5ZAm",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 370
        },
        "outputId": "8ced27ba-647b-4537-a51c-b35d56e83c7a"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "<style>\n",
              "  #altair-viz-320f4475ac254cdea2e1a979fc709421.vega-embed {\n",
              "    width: 100%;\n",
              "    display: flex;\n",
              "  }\n",
              "\n",
              "  #altair-viz-320f4475ac254cdea2e1a979fc709421.vega-embed details,\n",
              "  #altair-viz-320f4475ac254cdea2e1a979fc709421.vega-embed details summary {\n",
              "    position: relative;\n",
              "  }\n",
              "</style>\n",
              "<div id=\"altair-viz-320f4475ac254cdea2e1a979fc709421\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-320f4475ac254cdea2e1a979fc709421\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-320f4475ac254cdea2e1a979fc709421\");\n",
              "    }\n",
              "\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.20.1?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      let deps = [\"vega-embed\"];\n",
              "      require(deps, displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"5.20.1\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"hconcat\": [{\"mark\": {\"type\": \"point\"}, \"encoding\": {\"color\": {\"field\": \"Year\", \"type\": \"quantitative\"}, \"tooltip\": [{\"field\": \"Model\", \"type\": \"nominal\"}, {\"field\": \"Price (in USD)\", \"type\": \"quantitative\"}, {\"field\": \"Horsepower\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"Price (in USD)\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"Horsepower\", \"type\": \"quantitative\"}}, \"name\": \"view_3\"}, {\"mark\": {\"type\": \"bar\"}, \"encoding\": {\"color\": {\"field\": \"Year\", \"type\": \"quantitative\"}, \"tooltip\": [{\"field\": \"Year\", \"type\": \"quantitative\"}, {\"field\": \"Price (in USD)\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"Year\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"Price (in USD)\", \"type\": \"quantitative\"}}, \"name\": \"view_4\"}], \"data\": {\"name\": \"data-6145f401147b770a254b4fedbb1675b3\"}, \"params\": [{\"name\": \"param_3\", \"select\": {\"type\": \"interval\", \"encodings\": [\"x\", \"y\"]}, \"bind\": \"scales\", \"views\": [\"view_3\"]}, {\"name\": \"param_4\", \"select\": {\"type\": \"interval\", \"encodings\": [\"x\", \"y\"]}, \"bind\": \"scales\", \"views\": [\"view_4\"]}], \"resolve\": {\"scale\": {\"color\": \"independent\"}}, \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.20.1.json\", \"datasets\": {\"data-6145f401147b770a254b4fedbb1675b3\": [{\"Model\": \"Toyota Corolla\", \"Price (in USD)\": 20000, \"Horsepower\": 132, \"Weight (in kg)\": 1100, \"Year\": 2019}, {\"Model\": \"Ford Focus\", \"Price (in USD)\": 19000, \"Horsepower\": 140, \"Weight (in kg)\": 1200, \"Year\": 2020}, {\"Model\": \"Honda Civic\", \"Price (in USD)\": 22000, \"Horsepower\": 158, \"Weight (in kg)\": 1250, \"Year\": 2021}, {\"Model\": \"BMW 3 Series\", \"Price (in USD)\": 35000, \"Horsepower\": 255, \"Weight (in kg)\": 1500, \"Year\": 2020}, {\"Model\": \"Audi A4\", \"Price (in USD)\": 37000, \"Horsepower\": 248, \"Weight (in kg)\": 1450, \"Year\": 2021}, {\"Model\": \"Tesla Model 3\", \"Price (in USD)\": 45000, \"Horsepower\": 283, \"Weight (in kg)\": 1600, \"Year\": 2021}, {\"Model\": \"Mercedes-Benz C-Class\", \"Price (in USD)\": 40000, \"Horsepower\": 255, \"Weight (in kg)\": 1500, \"Year\": 2020}, {\"Model\": \"Volkswagen Jetta\", \"Price (in USD)\": 23000, \"Horsepower\": 147, \"Weight (in kg)\": 1300, \"Year\": 2019}, {\"Model\": \"Chevrolet Malibu\", \"Price (in USD)\": 24000, \"Horsepower\": 160, \"Weight (in kg)\": 1400, \"Year\": 2020}, {\"Model\": \"Hyundai Sonata\", \"Price (in USD)\": 27000, \"Horsepower\": 191, \"Weight (in kg)\": 1400, \"Year\": 2021}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.HConcatChart(...)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Scatter Plot: The scatter plot shows a positive correlation between Price (in USD) and Horsepower. Cars with higher horsepower generally have higher prices. However, some models with high horsepower still have relatively lower prices, indicating that other factors like brand, model, or age might influence the price.\n",
        "\n",
        "Bar Chart: The bar chart shows that 2021 models have the highest Price (in USD), followed by 2020 models. 2019 models have the lowest average prices. This suggests that newer models tend to be priced higher due to newer features, technology, or market trends.\n",
        "\n"
      ],
      "metadata": {
        "id": "I04-mkaf8E7x"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Explain your Understanding of this Tutorial in detail?"
      ],
      "metadata": {
        "id": "S2dDv8304GpI"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "I learnt how to load a dataset and do simple analysis with Pandas in this tutorial. For example, I learnt how to check for missing values and summarise statistics. To look into the connections between things like Price and Horsepower, I used Seaborn's static visualisations like histograms, pairplots, and association heatmaps. People used Altair to make dynamic graphs and charts, like scatter plots and bar charts, that let them sort and look through data by Year. I noticed that models from 2021 tend to have the highest prices and that more horsepower usually means more money. These pictures helped find patterns and trends, like how the prices of younger and older car models are different. The tutorial helped me get better at both static and dynamic ways of showing facts."
      ],
      "metadata": {
        "id": "hnF8vWZC4iPi"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# **Question 2 ( 25 Points)**"
      ],
      "metadata": {
        "id": "1kjYf3tdqMiD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import altair as alt\n",
        "import pandas as pd\n",
        "\n",
        "# Create the car dataset as a dictionary\n",
        "data = {\n",
        "    \"Model\": [\"Toyota Corolla\", \"Ford Focus\", \"Honda Civic\", \"BMW 3 Series\", \"Audi A4\",\n",
        "              \"Tesla Model 3\", \"Mercedes-Benz C-Class\", \"Volkswagen Jetta\", \"Chevrolet Malibu\", \"Hyundai Sonata\"],\n",
        "    \"Price (in USD)\": [20000, 19000, 22000, 35000, 37000, 45000, 40000, 23000, 24000, 27000],\n",
        "    \"Horsepower\": [132, 140, 158, 255, 248, 283, 255, 147, 160, 191],\n",
        "    \"Weight (in kg)\": [1100, 1200, 1250, 1500, 1450, 1600, 1500, 1300, 1400, 1400],\n",
        "    \"Year\": [2019, 2020, 2021, 2020, 2021, 2021, 2020, 2019, 2020, 2021]\n",
        "}\n",
        "\n",
        "# Create a DataFrame\n",
        "df = pd.DataFrame(data)\n",
        "\n",
        "# Print the data (to verify)\n",
        "print(df)\n"
      ],
      "metadata": {
        "id": "NwmuQ0oOqRWV",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "86b74948-7e5c-4f4b-f5cd-3bf07ff135eb"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                   Model  Price (in USD)  Horsepower  Weight (in kg)  Year\n",
            "0         Toyota Corolla           20000         132            1100  2019\n",
            "1             Ford Focus           19000         140            1200  2020\n",
            "2            Honda Civic           22000         158            1250  2021\n",
            "3           BMW 3 Series           35000         255            1500  2020\n",
            "4                Audi A4           37000         248            1450  2021\n",
            "5          Tesla Model 3           45000         283            1600  2021\n",
            "6  Mercedes-Benz C-Class           40000         255            1500  2020\n",
            "7       Volkswagen Jetta           23000         147            1300  2019\n",
            "8       Chevrolet Malibu           24000         160            1400  2020\n",
            "9         Hyundai Sonata           27000         191            1400  2021\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Scatter plot for 'Price (in USD)' vs 'Horsepower' with interactive tooltips\n",
        "scatter_plot = alt.Chart(df).mark_point(shape='triangle').encode(\n",
        "    x=alt.X('Price (in USD):Q', title='Price (in USD)'),  # X-axis: Price\n",
        "    y=alt.Y('Horsepower:Q', title='Horsepower'),  # Y-axis: Horsepower\n",
        "    color='Year:N',  # Color by Year\n",
        "    tooltip=['Model', 'Price (in USD)', 'Horsepower', 'Year']  # Tooltips for Model, Price, Horsepower, and Year\n",
        ").interactive()  # Make the plot interactive\n",
        "\n",
        "scatter_plot.show()\n"
      ],
      "metadata": {
        "id": "j9ZRDBwPqY8R",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 368
        },
        "outputId": "0e31859b-3f0c-4a3d-9442-a63a8bf1ae84"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "<style>\n",
              "  #altair-viz-c071336f19ab4a5796ac01f333d15f7d.vega-embed {\n",
              "    width: 100%;\n",
              "    display: flex;\n",
              "  }\n",
              "\n",
              "  #altair-viz-c071336f19ab4a5796ac01f333d15f7d.vega-embed details,\n",
              "  #altair-viz-c071336f19ab4a5796ac01f333d15f7d.vega-embed details summary {\n",
              "    position: relative;\n",
              "  }\n",
              "</style>\n",
              "<div id=\"altair-viz-c071336f19ab4a5796ac01f333d15f7d\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-c071336f19ab4a5796ac01f333d15f7d\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-c071336f19ab4a5796ac01f333d15f7d\");\n",
              "    }\n",
              "\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.20.1?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      let deps = [\"vega-embed\"];\n",
              "      require(deps, displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"5.20.1\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-6145f401147b770a254b4fedbb1675b3\"}, \"mark\": {\"type\": \"point\", \"shape\": \"triangle\"}, \"encoding\": {\"color\": {\"field\": \"Year\", \"type\": \"nominal\"}, \"tooltip\": [{\"field\": \"Model\", \"type\": \"nominal\"}, {\"field\": \"Price (in USD)\", \"type\": \"quantitative\"}, {\"field\": \"Horsepower\", \"type\": \"quantitative\"}, {\"field\": \"Year\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"Price (in USD)\", \"title\": \"Price (in USD)\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"Horsepower\", \"title\": \"Horsepower\", \"type\": \"quantitative\"}}, \"params\": [{\"name\": \"param_7\", \"select\": {\"type\": \"interval\", \"encodings\": [\"x\", \"y\"]}, \"bind\": \"scales\"}], \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.20.1.json\", \"datasets\": {\"data-6145f401147b770a254b4fedbb1675b3\": [{\"Model\": \"Toyota Corolla\", \"Price (in USD)\": 20000, \"Horsepower\": 132, \"Weight (in kg)\": 1100, \"Year\": 2019}, {\"Model\": \"Ford Focus\", \"Price (in USD)\": 19000, \"Horsepower\": 140, \"Weight (in kg)\": 1200, \"Year\": 2020}, {\"Model\": \"Honda Civic\", \"Price (in USD)\": 22000, \"Horsepower\": 158, \"Weight (in kg)\": 1250, \"Year\": 2021}, {\"Model\": \"BMW 3 Series\", \"Price (in USD)\": 35000, \"Horsepower\": 255, \"Weight (in kg)\": 1500, \"Year\": 2020}, {\"Model\": \"Audi A4\", \"Price (in USD)\": 37000, \"Horsepower\": 248, \"Weight (in kg)\": 1450, \"Year\": 2021}, {\"Model\": \"Tesla Model 3\", \"Price (in USD)\": 45000, \"Horsepower\": 283, \"Weight (in kg)\": 1600, \"Year\": 2021}, {\"Model\": \"Mercedes-Benz C-Class\", \"Price (in USD)\": 40000, \"Horsepower\": 255, \"Weight (in kg)\": 1500, \"Year\": 2020}, {\"Model\": \"Volkswagen Jetta\", \"Price (in USD)\": 23000, \"Horsepower\": 147, \"Weight (in kg)\": 1300, \"Year\": 2019}, {\"Model\": \"Chevrolet Malibu\", \"Price (in USD)\": 24000, \"Horsepower\": 160, \"Weight (in kg)\": 1400, \"Year\": 2020}, {\"Model\": \"Hyundai Sonata\", \"Price (in USD)\": 27000, \"Horsepower\": 191, \"Weight (in kg)\": 1400, \"Year\": 2021}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.Chart(...)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Bar chart for average 'Price (in USD)' by 'Year'\n",
        "bar_chart = alt.Chart(df).mark_bar().encode(\n",
        "    x='Year:N',  # Year on the X-axis (categorical)\n",
        "    y='mean(Price (in USD)):Q',  # Average Price (in USD) on the Y-axis\n",
        "    color='Year:N',  # Color by Year\n",
        "    tooltip=['Year', 'mean(Price (in USD))']  # Tooltip showing Year and average Price\n",
        ").interactive()  # Make the chart interactive\n",
        "\n",
        "bar_chart.show()\n"
      ],
      "metadata": {
        "id": "bO1DmZ_QqsW4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 381
        },
        "outputId": "c80d582f-1b74-4030-d774-0f4c020ac0df"
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "<style>\n",
              "  #altair-viz-fb964f2305be419499911357358de4b2.vega-embed {\n",
              "    width: 100%;\n",
              "    display: flex;\n",
              "  }\n",
              "\n",
              "  #altair-viz-fb964f2305be419499911357358de4b2.vega-embed details,\n",
              "  #altair-viz-fb964f2305be419499911357358de4b2.vega-embed details summary {\n",
              "    position: relative;\n",
              "  }\n",
              "</style>\n",
              "<div id=\"altair-viz-fb964f2305be419499911357358de4b2\"></div>\n",
              "<script type=\"text/javascript\">\n",
              "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
              "  (function(spec, embedOpt){\n",
              "    let outputDiv = document.currentScript.previousElementSibling;\n",
              "    if (outputDiv.id !== \"altair-viz-fb964f2305be419499911357358de4b2\") {\n",
              "      outputDiv = document.getElementById(\"altair-viz-fb964f2305be419499911357358de4b2\");\n",
              "    }\n",
              "\n",
              "    const paths = {\n",
              "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
              "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
              "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.20.1?noext\",\n",
              "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
              "    };\n",
              "\n",
              "    function maybeLoadScript(lib, version) {\n",
              "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
              "      return (VEGA_DEBUG[key] == version) ?\n",
              "        Promise.resolve(paths[lib]) :\n",
              "        new Promise(function(resolve, reject) {\n",
              "          var s = document.createElement('script');\n",
              "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
              "          s.async = true;\n",
              "          s.onload = () => {\n",
              "            VEGA_DEBUG[key] = version;\n",
              "            return resolve(paths[lib]);\n",
              "          };\n",
              "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
              "          s.src = paths[lib];\n",
              "        });\n",
              "    }\n",
              "\n",
              "    function showError(err) {\n",
              "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
              "      throw err;\n",
              "    }\n",
              "\n",
              "    function displayChart(vegaEmbed) {\n",
              "      vegaEmbed(outputDiv, spec, embedOpt)\n",
              "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
              "    }\n",
              "\n",
              "    if(typeof define === \"function\" && define.amd) {\n",
              "      requirejs.config({paths});\n",
              "      let deps = [\"vega-embed\"];\n",
              "      require(deps, displayChart, err => showError(`Error loading script: ${err.message}`));\n",
              "    } else {\n",
              "      maybeLoadScript(\"vega\", \"5\")\n",
              "        .then(() => maybeLoadScript(\"vega-lite\", \"5.20.1\"))\n",
              "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
              "        .catch(showError)\n",
              "        .then(() => displayChart(vegaEmbed));\n",
              "    }\n",
              "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-6145f401147b770a254b4fedbb1675b3\"}, \"mark\": {\"type\": \"bar\"}, \"encoding\": {\"color\": {\"field\": \"Year\", \"type\": \"nominal\"}, \"tooltip\": [{\"field\": \"Year\", \"type\": \"quantitative\"}, {\"aggregate\": \"mean\", \"field\": \"Price (in USD)\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"Year\", \"type\": \"nominal\"}, \"y\": {\"aggregate\": \"mean\", \"field\": \"Price (in USD)\", \"type\": \"quantitative\"}}, \"params\": [{\"name\": \"param_8\", \"select\": {\"type\": \"interval\", \"encodings\": [\"x\", \"y\"]}, \"bind\": \"scales\"}], \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.20.1.json\", \"datasets\": {\"data-6145f401147b770a254b4fedbb1675b3\": [{\"Model\": \"Toyota Corolla\", \"Price (in USD)\": 20000, \"Horsepower\": 132, \"Weight (in kg)\": 1100, \"Year\": 2019}, {\"Model\": \"Ford Focus\", \"Price (in USD)\": 19000, \"Horsepower\": 140, \"Weight (in kg)\": 1200, \"Year\": 2020}, {\"Model\": \"Honda Civic\", \"Price (in USD)\": 22000, \"Horsepower\": 158, \"Weight (in kg)\": 1250, \"Year\": 2021}, {\"Model\": \"BMW 3 Series\", \"Price (in USD)\": 35000, \"Horsepower\": 255, \"Weight (in kg)\": 1500, \"Year\": 2020}, {\"Model\": \"Audi A4\", \"Price (in USD)\": 37000, \"Horsepower\": 248, \"Weight (in kg)\": 1450, \"Year\": 2021}, {\"Model\": \"Tesla Model 3\", \"Price (in USD)\": 45000, \"Horsepower\": 283, \"Weight (in kg)\": 1600, \"Year\": 2021}, {\"Model\": \"Mercedes-Benz C-Class\", \"Price (in USD)\": 40000, \"Horsepower\": 255, \"Weight (in kg)\": 1500, \"Year\": 2020}, {\"Model\": \"Volkswagen Jetta\", \"Price (in USD)\": 23000, \"Horsepower\": 147, \"Weight (in kg)\": 1300, \"Year\": 2019}, {\"Model\": \"Chevrolet Malibu\", \"Price (in USD)\": 24000, \"Horsepower\": 160, \"Weight (in kg)\": 1400, \"Year\": 2020}, {\"Model\": \"Hyundai Sonata\", \"Price (in USD)\": 27000, \"Horsepower\": 191, \"Weight (in kg)\": 1400, \"Year\": 2021}]}}, {\"mode\": \"vega-lite\"});\n",
              "</script>"
            ],
            "text/plain": [
              "alt.Chart(...)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question:- How do you save a plot created with matplotlib to a file?\n"
      ],
      "metadata": {
        "id": "eiKy0fFA64xz"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "A method called savefig() is used to save a plot made with matplotlib. For example: plt.savefig(\"plot.png\"); The file extension can also be changed to change the file type.\n"
      ],
      "metadata": {
        "id": "hskq-jOb9DXp"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question:- Describe a scenario where you would prefer seaborn over matplotlib."
      ],
      "metadata": {
        "id": "L-DVnGdU9FuM"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "That's why Seaborn is used for heatmaps, box plots, and pair plots, which need to be made quickly and with little code. Matplotlib makes visualisations harder to do, but this one makes them easier by automatically labelling colour schemes and axes, which is harder to do with Matplotlib.\n"
      ],
      "metadata": {
        "id": "z3S0M6Vw9OmZ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Why you are choosing these elements/ labels as tooltips. What are\n",
        "the advantages with or without the tooltips?\n"
      ],
      "metadata": {
        "id": "NigH1MFu36ef"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "There are now tooltips that show more details about each piece of data, like Name, Performance Score, and Age. Labels help people understand the data as they move the mouse over the points without making the visualisation too busy. Even though there are tooltips, the chart stays clean and to the point, and it still gives accurate information. The chart would not be as useful without tooltips; users would have to look at statistics from other platforms.\n"
      ],
      "metadata": {
        "id": "1gwKaZJv38jc"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "What makes Altair a good choice for creating interactive visualizations?"
      ],
      "metadata": {
        "id": "wCQOsRHS9pjj"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "Because its syntax is declarative, Altair is a great choice for interactive visualisations. It makes it easy to do difficult plotting jobs. With just a few lines of code, you can make animated charts that can zoom, show tooltips, and change on the fly. It works great for quick, experimental data analysis because it automatically manages data and scale and works well with Jupyter Notebooks."
      ],
      "metadata": {
        "id": "8uGQbms19sGU"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Provide your understanding of this Assignment in about 250 - 300 words."
      ],
      "metadata": {
        "id": "MYwMx6kf6N3p"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        " It was the goal of the assignment for me to learn how to use Altair for interactive images and visualisations in Google Colab. For this assignment, we used different kinds of charts, like scatter plots, box plots, and bar graphs, to show how factors are related to each other visually. We also looked at and analysed the datasets. To make finding even easier, interactive features like tooltips, magnification, and selection should be added.\n",
        "\n",
        "\n",
        "I made scatter plots to compare the employee dataset's Experience (Years) and Salary (USD), bar charts to show the average salary by area, and line charts to show how the Performance Score has changed over time. These plots show patterns like how salaries are distributed and how success is changing over time. These charts also help you find patterns, like the link between experience and salary, and show how things are different between departments or how success has changed over time.\n",
        "\n",
        "\n",
        "\n",
        "Altair's can make dynamic plots with very little code, and adding tooltips for more information without changing the chart is very important. With this tool, data is shown in a clear and interesting way that makes it easy for users to discover and understand trends.\n",
        "\n",
        "\n",
        "Lastly, this project helped me understand how Altair makes it easier to make interactive, user-friendly visualisations that help people get insights and share data clearly."
      ],
      "metadata": {
        "id": "gK8L7Bxl6YpP"
      }
    }
  ]
}